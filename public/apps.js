// Charger les pr√©visions
document.getElementById("forecast-form").addEventListener("submit", async (e) => {
  e.preventDefault();
  const city = document.getElementById("city").value;
  try {
    const res = await fetch(`/forecast?city=${city}`);
    const data = await res.json();
    document.getElementById("forecast-result").innerHTML = `
      <h3>${city}</h3>
      <p>Temp√©rature: ${data?.data?.list[0]?.main?.temp}¬∞C</p>
      <p>M√©t√©o: ${data?.data?.list[0]?.weather[0]?.description}</p>
    `;
  } catch (err) {
    document.getElementById("forecast-result").innerHTML = "Erreur chargement m√©t√©o.";
  }
});

// Podcasts
async function generatePodcast(type) {
  document.getElementById("podcast-result").innerHTML = "‚è≥ G√©n√©ration du podcast...";
  try {
    const res = await fetch(`/podcast/generate?type=${type}`);
    const data = await res.json();
    document.getElementById("podcast-result").innerHTML = `
      <p>${data.forecast}</p>
      üéß <a href="${data.audioUrl}" target="_blank">√âcouter</a>
    `;
  } catch (err) {
    document.getElementById("podcast-result").innerHTML = "‚ùå Erreur g√©n√©ration podcast.";
  }
}

// Alertes
async function loadAlerts() {
  try {
    const res = await fetch("/alerts");
    const data = await res.json();
    let alertsHTML = "";
    data.alerts.forEach(alert => {
      alertsHTML += `<p>‚ö†Ô∏è [${alert.level}] ${alert.type} ‚Üí ${alert.description} (${alert.reliability}% fiabilit√©)</p>`;
    });
    document.getElementById("alerts-result").innerHTML = alertsHTML;
  } catch (err) {
    document.getElementById("alerts-result").innerHTML = "Pas d‚Äôalertes disponibles.";
  }
}
loadAlerts();

