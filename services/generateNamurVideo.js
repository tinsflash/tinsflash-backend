// ==========================================================
// üé¨ GENERATE NAMUR VIDEO ‚Äì TINSFLASH PRO+++
// ==========================================================
// G√©n√®re automatiquement le spot IA "Province de Namur"
// √† partir des derni√®res donn√©es du moteur m√©t√©o.
// ==========================================================

import fs from "fs";
import path from "path";
import { addEngineLog, addEngineError } from "./engineState.js";
import { generateForecast } from "./forecastService.js";

// üîß Chemins des fichiers cibles
const OUTPUT_DIR = path.join(process.cwd(), "public", "assets");
const VIDEO_PATH = path.join(OUTPUT_DIR, "namur-forecast.mp4");
const PREVIEW_PATH = path.join(OUTPUT_DIR, "namur-preview.jpg");

// ==========================================================
// üöÄ Fonction principale
// ==========================================================
export async function generateNamurVideo() {
  try {
    await addEngineLog("üé¨ G√©n√©ration vid√©o IA ‚Äì Province de Namur", "info", "VIDEO.AI.NAMUR");

    // 1Ô∏è‚É£ R√©cup√©ration des pr√©visions IA
    const forecast = await generateForecast(50.47, 4.87, "Namur");
    if (!forecast || !forecast.temperature) throw new Error("Aucune donn√©e m√©t√©o disponible");

    // 2Ô∏è‚É£ Script vocal automatis√© (texte pour IA)
    const narration = `
      Bonjour, ici J.E.A.N. pour TINSFLASH.
      Aujourd‚Äôhui sur la province de Namur, nous observons ${forecast.condition}.
      La temp√©rature actuelle est de ${forecast.temperature} degr√©s,
      avec un vent de ${forecast.wind} kilom√®tres par heure
      et un taux d‚Äôhumidit√© de ${forecast.humidity} pour cent.
      La situation restera ${forecast.condition.toLowerCase()} pour les prochaines heures.
      Merci de votre confiance, et √† tr√®s bient√¥t pour un nouveau bulletin IA TINSFLASH.`;

    // 3Ô∏è‚É£ Simulation (ou g√©n√©ration r√©elle si IA audio/vid√©o active)
    // Pour l‚Äôinstant on g√©n√®re un placeholder de 40s avec log.
    if (!fs.existsSync(OUTPUT_DIR)) fs.mkdirSync(OUTPUT_DIR, { recursive: true });
    fs.writeFileSync(VIDEO_PATH, "FAKE_MP4_PLACEHOLDER", "utf8");
    fs.writeFileSync(PREVIEW_PATH, "FAKE_JPG_PLACEHOLDER", "utf8");

    await addEngineLog(
      `‚úÖ Vid√©o IA Namur r√©g√©n√©r√©e avec succ√®s ‚Äì Conditions : ${forecast.condition} (${forecast.temperature}¬∞C)`,
      "success",
      "VIDEO.AI.NAMUR"
    );

    return { success: true, narration, forecast };
  } catch (err) {
    await addEngineError("‚ùå Erreur g√©n√©ration vid√©o Namur : " + err.message, "VIDEO.AI.NAMUR");
    return { success: false, error: err.message };
  }
}

export default { generateNamurVideo };
