// PATH: services/runWorld.js
// üåç RUN MONDIAL TINSFLASH ‚Äì Reste du monde (1x/jour)
// ==========================================================
// Ex√©cute toutes les zones hors Europe, USA et Canada.
// Compatible Render / MongoDB / IA.J.E.A.N (Everest Protocol v2.8 PRO+++)
// ==========================================================

import {
  initEngineState,
  addEngineLog,
  addEngineError,
  saveEngineState,
} from "./engineState.js";

import { runGlobalAfricaNord } from "./runGlobalAfricaNord.js";
import { runGlobalAfricaCentrale } from "./runGlobalAfricaCentrale.js";
import { runGlobalAfricaOuest } from "./runGlobalAfricaOuest.js";
import { runGlobalAfricaSud } from "./runGlobalAfricaSud.js";
import { runGlobalAmericaSud } from "./runGlobalAmericaSud.js";
import { runGlobalAsiaEst } from "./runGlobalAsiaEst.js";
import { runGlobalAsiaSud } from "./runGlobalAsiaSud.js";
import { runGlobalOceania } from "./runGlobalOceania.js";
import { runGlobalCaribbean } from "./runGlobalCaribbean.js";
import { runWorldAlerts } from "./runWorldAlerts.js";

// ==========================================================
// üß† Lancement du run mondial
// ==========================================================
console.log("==================================================");
console.log("üåã RUN MONDIAL ‚Äì RESTE DU MONDE (TINSFLASH PRO+++)");
console.log("==================================================\n");

try {
  await initEngineState();
  await addEngineLog("üåé Initialisation du moteur mondial termin√©e (runWorld.js)", "info", "runWorld");

  // ======================================================
  // 1Ô∏è‚É£ Lancement parall√®le de toutes les r√©gions du monde
  // ======================================================
  await addEngineLog("üß© Lancement des sous-r√©gions (Afrique, Am√©rique Sud, Asie, Oc√©anie, Cara√Øbes)...", "info", "runWorld");

  const runs = await Promise.allSettled([
    runGlobalAfricaNord(),
    runGlobalAfricaCentrale(),
    runGlobalAfricaOuest(),
    runGlobalAfricaSud(),
    runGlobalAmericaSud(),
    runGlobalAsiaEst(),
    runGlobalAsiaSud(),
    runGlobalOceania(),
    runGlobalCaribbean(),
  ]);

  const ok = runs.filter(r => r.status === "fulfilled").length;
  const failed = runs.filter(r => r.status !== "fulfilled").length;

  await addEngineLog(`‚úÖ ${ok} sous-r√©gions ex√©cut√©es avec succ√®s, ${failed} √©checs √©ventuels`, "success", "runWorld");

  // ======================================================
  // 2Ô∏è‚É£ Fusion mondiale des alertes
  // ======================================================
  await addEngineLog("‚ö° Fusion mondiale des alertes (runWorldAlerts)...", "info", "runWorld");
  const alerts = await runWorldAlerts();

  await addEngineLog(
    `üì° ${alerts?.summary?.totalAlerts || 0} alertes globales int√©gr√©es.`,
    "success",
    "runWorld"
  );

  // ======================================================
  // 3Ô∏è‚É£ Finalisation et sauvegarde √©tat moteur
  // ======================================================
  const state = {
    status: "ok",
    lastRun: new Date(),
    type: "world",
  };

  await saveEngineState(state);
  await addEngineLog("üåç RUN MONDIAL TERMIN√â AVEC SUCC√àS ‚úÖ", "success", "runWorld");

  console.log("\n‚úÖ RUN MONDIAL TERMIN√â AVEC SUCC√àS\n");
  process.exit(0);

} catch (err) {
  console.error("‚ùå ERREUR RUN MONDIAL :", err);
  await addEngineError(`‚ùå ERREUR RUN MONDIAL : ${err.message}`, "runWorld");
  await saveEngineState({ status: "fail", type: "world" });
  process.exit(1);
}
