// services/alertsService.js
import Alert from "../models/Alert.js";
import { addLog } from "./logsService.js";

/**
 * Cr√©ation d'une alerte
 * @param {Object} data - donn√©es d'entr√©e
 */
export async function createAlert(data) {
  try {
    const alert = new Alert({
      title: data.title || "Alerte m√©t√©o",
      description: data.description || "‚ö†Ô∏è Pas de description fournie",
      country: data.country || "N/A",
      severity: data.severity || "medium",
      certainty: data.certainty || 50,
      issuedAt: data.issuedAt || new Date(),
      source: data.source || "Tinsflash Nuclear Core",
      status: data.status || "‚úÖ Premier d√©tecteur",
    });

    const savedAlert = await alert.save();
    await addLog(`üö® Nouvelle alerte cr√©√©e : ${savedAlert.title} (${savedAlert.country})`);

    return savedAlert;
  } catch (err) {
    console.error("‚ùå Erreur cr√©ation alerte:", err.message);
    await addLog("‚ùå Erreur cr√©ation alerte : " + err.message);
    throw err;
  }
}

/**
 * R√©cup√©ration des alertes (par pays optionnel)
 */
export async function getAlerts(filter = {}) {
  try {
    const alerts = await Alert.find(filter).sort({ createdAt: -1 }).limit(100);
    return alerts;
  } catch (err) {
    console.error("‚ùå Erreur r√©cup√©ration alertes:", err.message);
    throw err;
  }
}

/**
 * Suppression d'une alerte
 */
export async function deleteAlert(id) {
  try {
    const deleted = await Alert.findByIdAndDelete(id);
    if (deleted) {
      await addLog(`üóëÔ∏è Alerte supprim√©e : ${deleted.title} (${deleted.country})`);
    }
    return deleted;
  } catch (err) {
    console.error("‚ùå Erreur suppression alerte:", err.message);
    throw err;
  }
}

export default { createAlert, getAlerts, deleteAlert };
