// PATH: services/runContinental.js
// RUN CONTINENTAL ‚Äì D√©tection anomalies sur zones non couvertes
// Objectif : g√©n√©rer des alertes continentales

import { askAI } from "./chatService.js";
import { addEngineLog, addEngineError, saveEngineState, getEngineState } from "./engineState.js";
import { processAlerts } from "./alertsService.js";

const continents = ["Europe", "Africa", "Asia", "North America", "South America", "Oceania"];

export async function runContinental() {
  const state = getEngineState();
  try {
    addEngineLog("üåç Lancement du RUN CONTINENTAL‚Ä¶");

    const alerts = [];

    for (const cont of continents) {
      try {
        addEngineLog(`üîé Analyse IA continentale : ${cont}‚Ä¶`);

        const aiPrompt = `
Analyse m√©t√©o RUN CONTINENTAL ‚Äì ${cont}
Objectif: d√©tecter toute anomalie majeure (temp√™te, cyclone, vague de chaleur, inondation‚Ä¶).
R√©ponds en JSON strict :
{ "continent": "${cont}", "type": "string", "reliability": 0-100, "firstDetector": true/false }
        `;

        const aiAnalysis = await askAI(aiPrompt);
        let parsedAlert;

        try {
          parsedAlert = JSON.parse(aiAnalysis);
          alerts.push(parsedAlert);
          addEngineLog(`‚úÖ Alerte continentale d√©tect√©e : ${cont} (${parsedAlert.type}) fiabilit√© ${parsedAlert.reliability}%`);
        } catch {
          addEngineError("‚ö†Ô∏è Impossible de parser l‚Äôalerte continentale " + cont);
        }
      } catch (err) {
        addEngineError(`Erreur sur continent ${cont}: ${err.message}`);
      }
    }

    // Sauvegarde
    state.continentalAlerts = alerts;
    state.alertsList = [...(state.alertsList || []), ...alerts];
    saveEngineState(state);

    // Tri via alertsService
    addEngineLog("üö® Tri et classification des alertes continentales‚Ä¶");
    const alertStats = await processAlerts();
    addEngineLog("‚úÖ RUN CONTINENTAL termin√©");

    return { alerts, alertStats };
  } catch (err) {
    addEngineError(err.message || "Erreur inconnue RUN CONTINENTAL");
    addEngineLog("‚ùå Erreur dans RUN CONTINENTAL");
    return { error: err.message };
  }
}
