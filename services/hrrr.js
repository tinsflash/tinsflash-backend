// services/hrrr.js
// üá∫üá∏ HRRR (High-Resolution Rapid Refresh, NOAA NOMADS)
// Ultra-haute r√©solution (3 km) ‚Äî USA uniquement

import axios from "axios";

export default async function hrrr(lat, lon) {
  try {
    const baseUrl = "https://nomads.ncep.noaa.gov/pub/data/nccf/com/hrrr/prod";
    const now = new Date();

    // HRRR est disponible toutes les heures ‚Üí on prend l'heure UTC pr√©c√©dente
    now.setHours(now.getUTCHours() - 1, 0, 0, 0);
    const yyyymmdd = now.toISOString().slice(0, 10).replace(/-/g, "");
    const hour = String(now.getUTCHours()).padStart(2, "0");

    // Exemple fichier GRIB2 ‚Üí on ne t√©l√©charge pas tout mais on note l‚ÄôURL
    const gribUrl = `${baseUrl}/hrrr.${yyyymmdd}/conus/hrrr.t${hour}z.wrfsfcf00.grib2`;

    // ‚ö†Ô∏è Ici : id√©alement d√©coder GRIB2 avec wgrib2 ou un parseur Node
    // Pour l‚Äôinstant on retourne juste la structure avec l‚ÄôURL
    return {
      source: "HRRR (NOAA NOMADS)",
      modelRun: `${yyyymmdd}T${hour}Z`,
      url: gribUrl,
      note: "‚ö†Ô∏è Extraction brute GRIB2 requise (pr√©voir d√©codeur c√¥t√© serveur).",
    };
  } catch (err) {
    console.error("‚ùå HRRR fetch error:", err.message);
    return { source: "HRRR (NOAA NOMADS)", error: err.message };
  }
}
