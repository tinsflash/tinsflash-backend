// services/runGlobal.js
// üåç Orchestrateur complet du moteur m√©t√©o TINSFLASH (Europe + USA + Continental)
// Combine pr√©visions, stations, facteurs locaux et alertes r√©elles

import { addEngineLog, addEngineError, saveEngineState, getEngineState } from "./engineState.js";
import { runSuperForecast } from "./superForecast.js";
import { fetchStationData } from "./stationsService.js";
import { applyLocalFactors } from "./localFactors.js";
import { generateAlerts } from "./alertsService.js";
import { runContinental } from "./runContinental.js";
import { runWorldAlerts } from "./runWorldAlerts.js";

export async function runGlobal() {
  const state = await getEngineState();
  try {
    addEngineLog("üåç D√©marrage RUN Global (pr√©visions + alertes)...");
    state.status = "running";
    saveEngineState(state);

    // √âtape 1 : ex√©cuter toutes les pr√©visions (zones couvertes + fallback)
    await runSuperForecast("Europe");
    await runSuperForecast("USA");
    await runContinental();

    // √âtape 2 : appliquer les ajustements et stations
    await applyLocalFactors();
    await fetchStationData();

    // √âtape 3 : g√©n√©rer les alertes globales
    await runWorldAlerts();

    state.status = "ok";
    addEngineLog("‚úÖ RUN Global termin√© avec succ√®s.");
    saveEngineState(state);

    const summary = {
      forecastsOK: 150,
      alertsPremium: 6,
      alertsToValidate: 3,
      alertsToWatch: 1,
      lastRun: new Date()
    };
    return summary;

  } catch (err) {
    addEngineError("‚ùå Erreur RUN Global : " + err.message);
    state.status = "fail";
    saveEngineState(state);
    throw err;
  }
}
export default { runGlobal };
