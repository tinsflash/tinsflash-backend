// PATH: services/chatService.js
import { askOpenAI } from "./openaiService.js";
import { askCohere } from "./cohereService.js";
import { getEngineState } from "./engineState.js";
import { getLogs } from "./adminLogs.js";

/**
 * üß† R√®gle d‚Äôutilisation IA :
 * - ChatGPT-5 ‚Üí moteur m√©t√©o (analyses et pr√©visions)
 * - ChatGPT-3.5 ‚Üí console admin (chat moteur + m√©t√©o)
 * - Cohere ‚Üí utilisateurs gratuits (J.E.A.N)
 */

/* ===========================================================
   üí¨ Chat moteur ‚Äì IA principale (ChatGPT-5)
   =========================================================== */
export async function askAIEngine(message = "") {
  try {
    const state = await getEngineState();
    const logs = await getLogs();

    const context = {
      checkup: state?.checkup || {},
      lastRun: state?.runTime || state?.lastRun,
      zonesCovered: Object.keys(state?.zonesCovered || {}).length || 0,
      alertsCount: state?.alerts?.length || 0,
      alerts: state?.alerts || [],
      logs: logs?.slice(-200) || [],
    };

    const SYSTEM_ENGINE = `
Tu es ChatGPT-5, le cerveau du moteur TINSFLASH.
Analyse uniquement les donn√©es issues du moteur, sans extrapoler.
R√©ponds en fran√ßais, de mani√®re scientifique et concise.
Indique toujours le niveau de fiabilit√© (%) et l'√©tat (OK / EN COURS / ERREUR) par √©tape.
`;

    const prompt = `
[QUESTION]
${message}

[CONTEXTE]
${JSON.stringify(context, null, 2)}

[INSTRUCTIONS]
- Ne pas inventer de donn√©es.
- Si information manquante ‚Üí indique la source en panne.
- Si la question concerne les pr√©visions ‚Üí r√©sume les tendances.
`;

    const reply = await askOpenAI(SYSTEM_ENGINE, prompt, { model: "gpt-5" });
    return reply;
  } catch (err) {
    console.error("‚ùå askAIEngine error:", err.message);
    return "Erreur IA moteur (ChatGPT-5).";
  }
}

/* ===========================================================
   üí¨ Chat console admin ‚Äì IA √©conomique (ChatGPT-3.5)
   =========================================================== */
export async function askAIAdmin(message = "", mode = "moteur") {
  try {
    const SYSTEM_ADMIN = `
Tu es un assistant technique ChatGPT-3.5 de la console d‚Äôadministration TINSFLASH.
Ton r√¥le : aider Patrick √† comprendre l‚Äô√©tat du moteur, les pr√©visions et les alertes.
Parle en fran√ßais, avec un ton professionnel et pr√©cis.
Donne des explications simples, fiables et op√©rationnelles.
`;

    const prefix =
      mode === "meteo"
        ? "Analyse m√©t√©o / climat demand√©e :"
        : "Demande li√©e au moteur ou √† la console :";

    const prompt = `${prefix}\n${message}`;
    const reply = await askOpenAI(SYSTEM_ADMIN, prompt, { model: "gpt-3.5-turbo" });
    return reply;
  } catch (err) {
    console.error("‚ùå askAIAdmin error:", err.message);
    return "Erreur IA admin (ChatGPT-3.5).";
  }
}

/* ===========================================================
   üí¨ Chat public (utilisateurs gratuits ‚Äì Cohere)
   =========================================================== */
export async function askAIGeneral(message = "") {
  try {
    const { reply } = await askCohere(message);
    return reply || "R√©ponse IA indisponible (Cohere).";
  } catch (err) {
    console.error("‚ùå askAIGeneral error:", err.message);
    return "Erreur IA publique (Cohere).";
  }
}

export default {
  askAIEngine,
  askAIAdmin,
  askAIGeneral,
};
