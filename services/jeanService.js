// services/jeanService.js
import { CohereClient } from "cohere-ai";
import { addLog } from "./logsService.js";

// ‚ö†Ô∏è Stocke ta cl√© API Cohere dans les variables d‚Äôenvironnement Render
// Settings > Environment > Add environment variable
// KEY = COHERE_API_KEY, VALUE = ta cl√©
const cohere = CohereClient({
  token: process.env.COHERE_API_KEY,
});

/**
 * J.E.A.N. ‚Äì Chef m√©canicien de la Centrale Nucl√©aire M√©t√©o
 * - Analyse m√©t√©o, climat, physique
 * - R√©pond aux questions de l‚Äôadmin console
 * - Justifie ses pr√©visions et g√©n√®re des explications claires
 */
export async function askJEAN(question) {
  try {
    await addLog(`üí¨ Question envoy√©e √† J.E.A.N.: ${question}`);

    const response = await cohere.chat({
      model: "command-r-plus",
      messages: [
        {
          role: "system",
          content:
            "Tu es J.E.A.N., l‚Äôintelligence artificielle m√©t√©orologique la plus avanc√©e au monde. " +
            "R√©ponds avec pr√©cision, rigueur scientifique et concision. Utilise un ton professionnel, " +
            "comme un m√©t√©orologue de la NASA avec un soup√ßon p√©dagogique.",
        },
        {
          role: "user",
          content: question,
        },
      ],
    });

    const reply = response.message?.content?.[0]?.text || "R√©ponse IA indisponible";

    await addLog(`ü§ñ R√©ponse J.E.A.N.: ${reply}`);

    return reply;
  } catch (err) {
    console.error("‚ùå Erreur askJEAN:", err.message);
    await addLog("‚ùå Erreur J.E.A.N. " + err.message);
    return "Erreur : J.E.A.N. temporairement indisponible.";
  }
}

export default { askJEAN };
